git init
git add '*.txt'
git commit -m "add a txt file"

# 修改txt文件之后检查
git status # 可以看到修改
git diff readme.txt  # 看看哪里做了修改
git add readme.txt  # 再次提交
git add . # Add all current changes to the next commit
git status # 可以看到修好已经被确认
git commit -m "add java"

git log  # 查看所有的修改记录
git log -p <file> # 查看特定文件的修改
git log --pretty=oneline # 修改显示方式

git reset --hard HEAD~2 # 修改到HEAD前2次状态
git reset --hard e9572  # 回到commit id = e9572*的状态

git reflog # 查询所有的操作记录。

git checkout -- readme.txt # 撤销上一次修改
git rm test.txt # 从版本库删除一个文件

git config --global --edit # 编辑本地机器设置，例如name

########
远程仓库
########

# 在github 将机器的ssh key添加进去
https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/
(1) windows 使用git bash工具

(2)
eval $(ssh-agent -s) # 得到一个 Agent pid
ssh-add ~/.ssh/id_rsa
(3) ssh key添加到git hub账户
xclip < ~/.ssh/id_rsa.pub # 复制到了剪切板

Or Mac copy current key
pbcopy < ~/.ssh/id_rsa.pub

---添加远程库---
# 在github创建一个repo, named test
# 从本地把repo
git remote -v # list all current remotes
git remote set-url origin git@github.com:hemafeifei/test.git
git remote add origin git@github.com:hemafeifei/4sea.git

# git remote -v # 查看远程连接情况
git push -u origin master (第一次操作需要带-u 表示upstream)

# git pull
git pull origin next:master # 从远程获取next分支与本地master分支合并
---从远程库克隆---
# 新建一个开发项目时，在github新建一个repo,并选择初始化with readme
# 在本地克隆
git clone git@github.com:hemafeifei/test.git

########
分支管理
########

# 新建分支
git checkout -b dev
# 查看分支
git branch
# 在当前dev分支下做一些修改，add 并commit

# 切换回原来master分支
git checkout master # 可以看到dev里面的修好并没同步过来
# 合并分支dev到master
git merge dev
# 删除分支dev
git branch -d dev
……未完待续

本地修改以后代码冲突：
1) 无视本地
git reset --hard
git pull

2) 保留本地修改，pull 远程update
git stash
git pull
git stash pop
########
标签管理
########
# 切换到相应的分支
git checkout master
git tag v1.0 # 打标签
git tag # 查看标签
# 如果要给之前的版本打标签
# git log 查询到之前的commit id
git tag v0.9 62274e
git tag -d v1.0 # 删除标签

# 忽略特殊文件
在根目录的.gitignore文件里添加要忽略的文件名
# 配置别名alias
git config --global alias.st status
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

# 在Mac上有.DS_Store文件问题
切换到所在目录
find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch
find . -name *.pyc -print0 | xargs -0 git rm -f --ignore-unmatch

# git bash for Mac, install
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/fabriziocucci/git-bash-for-mac/master/install.sh)"
# uninstall
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/fabriziocucci/git-bash-for-mac/master/uninstall.sh)"
